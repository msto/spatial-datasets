
rule download:
    output:
        "data/raw/moncada_GSE111672/GSE111672_RAW.tar"
    shell:
        """
        curl -o {output} ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE111nnn/GSE111672/suppl/GSE111672_RAW.tar
        """

rule extract:
    input:
        "data/raw/moncada_GSE111672/GSE111672_RAW.tar"
    output:
        [f"data/raw/moncada_GSE111672/{sample}.tsv.gz" for sample in config['samples']]
    params:
        outdir=lambda wildcards, input: os.path.dirname(input[0])
    shell:
        """
        tar -C {params.outdir} -xf {input};
        mv {params.outdir}/GSM3036911.tsv.gz {params.outdir}/GSM3036911_PDAC-A-st1.tsv.gz;
        mv {params.outdir}/GSM3405534_PDAC-B-ST1.tsv.gz {params.outdir}/GSM3405534_PDAC-B-st1.tsv.gz;
        """

rule make_data:
    input:
        'data/raw/thrane/{sample}_counts.tsv'
    output:
        temp('data/cleaned/thrane/{sample}.{data}.csv')
    shell:
        """
        ./scripts/thrane/make_{wildcards.data}.sh {input} {output}
        """

rule make_counts:
    input:
        'data/raw/thrane/{sample}_counts.tsv'
    output:
        temp('data/cleaned/thrane/{sample}.counts.csv.gz')
    shell:
        """
        ./scripts/thrane/make_counts.sh {input} {output}
        """

rule make_RDS:
    input:
        counts='data/cleaned/thrane/{sample}.counts.csv.gz',
        rowData='data/cleaned/thrane/{sample}.rowData.csv',
        colData='data/cleaned/thrane/{sample}.colData.csv'
    output:
        rds='data/cleaned/thrane/{sample}.rds'
    shell:
        """
        ./scripts/thrane/make_RDS.R \
            --sample {wildcards.sample} \
            {input.counts} {input.rowData} {input.colData} {output.rds}
        """

rule combine_RDS:
    input:
        expand('data/cleaned/thrane/{sample}.rds', sample=config['samples'])
    output:
        samples=temp('data/cleaned/thrane/samples.txt'),
        rds='data/cleaned/thrane.rds'
    shell:
        """
        echo {config[samples]} | sed -e 's/ /\\n/g' > {output.samples};
        ./scripts/thrane/combine_RDS.R {output.samples} {output.rds}
        """
