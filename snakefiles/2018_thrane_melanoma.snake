SAMPLES = [
    'ST_mel1_rep1',
    'ST_mel1_rep2',
    'ST_mel2_rep1',
    'ST_mel2_rep2',
    'ST_mel3_rep1',
    'ST_mel3_rep2',
    'ST_mel4_rep1',
    'ST_mel4_rep2']

rule all:
    input:
        expand('data/rds/2018_thrane_melanoma/{sample}.rds', sample=SAMPLES)

rule download:
    output:
        "data-raw/2018_thrane_melanoma/ST-Melanoma-Datasets_1.zip"
    shell:
        """
        curl -o {output} https://www.spatialresearch.org/wp-content/uploads/2019/03/ST-Melanoma-Datasets_1.zip
        """

rule decompress:
    input:
        "data-raw/2018_thrane_melanoma/ST-Melanoma-Datasets_1.zip"
    output:
        [f"data-raw/2018_thrane_melanoma/{sample}_counts.tsv" for sample in SAMPLES]
    params:
        outdir=lambda wildcards, input: os.path.dirname(input[0])
    shell:
        """
        unzip -d {params.outdir} {input}
        """

rule make_data:
    input:
        'data-raw/2018_thrane_melanoma/{sample}_counts.tsv'
    output:
        'data/cleaned/2018_thrane_melanoma/{sample}.{data}.csv'
    shell:
        """
        ./scripts/2018_thrane_melanoma/make_{wildcards.data}.sh {input} {output}
        """

rule make_counts:
    input:
        'data-raw/2018_thrane_melanoma/{sample}_counts.tsv'
    output:
        'data/cleaned/2018_thrane_melanoma/{sample}.counts.csv.gz'
    shell:
        """
        ./scripts/2018_thrane_melanoma/make_counts.sh {input} {output}
        """

rule make_RDS:
    input:
        counts='data/cleaned/2018_thrane_melanoma/{sample}.counts.csv.gz',
        rowData='data/cleaned/2018_thrane_melanoma/{sample}.rowData.csv',
        colData='data/cleaned/2018_thrane_melanoma/{sample}.colData.csv'
    output:
        rds='data/rds/2018_thrane_melanoma/{sample}.rds'
    shell:
        """
        ./scripts/make_RDS.R \
            --sample {wildcards.sample} --dataset 2018_thrane_melanoma \
            {input.counts} {input.rowData} {input.colData} {output.rds}
        """
