
URLS = {
    'whole_transcriptome': {
        'expression': 'https://cf.10xgenomics.com/samples/spatial-exp/1.1.0/V1_Human_Lymph_Node/V1_Human_Lymph_Node_filtered_feature_bc_matrix.tar.gz',
        'spatial': 'https://cf.10xgenomics.com/samples/spatial-exp/1.1.0/V1_Human_Lymph_Node/V1_Human_Lymph_Node_spatial.tar.gz',
        'image': 'https://cf.10xgenomics.com/samples/spatial-exp/1.1.0/V1_Human_Lymph_Node/V1_Human_Lymph_Node_image.tif'
    },
}


rule all:
    input:
        expand("data/rds/2020_10X-demo_lymph-node/{library}.rds", library=URLS.keys())
        

rule download:
    output:
        expr="data-raw/2020_10X-demo_lymph-node/{library}/filtered_feature_bc_matrix.tar.gz",
        spatial="data-raw/2020_10X-demo_lymph-node/{library}/spatial.tar.gz",
        image="data-raw/2020_10X-demo_lymph-node/{library}/image.tif",
    params:
        expr=lambda wildcards: URLS[wildcards.library]['expression'],
        spatial=lambda wildcards: URLS[wildcards.library]['spatial'],
        image=lambda wildcards: URLS[wildcards.library]['image']
    shell:
        """
        curl -o {output.expr} {params.expr}
        curl -o {output.spatial} {params.spatial}
        curl -o {output.image} {params.image}
        """

rule extract:
    input:
        expr="data-raw/2020_10X-demo_lymph-node/{library}/filtered_feature_bc_matrix.tar.gz",
        spatial="data-raw/2020_10X-demo_lymph-node/{library}/spatial.tar.gz",
    output:
        "data-raw/2020_10X-demo_lymph-node/{library}/filtered_feature_bc_matrix/matrix.mtx.gz",
        "data-raw/2020_10X-demo_lymph-node/{library}/spatial/tissue_positions_list.csv",
    params:
        outdir=lambda wildcards, input: os.path.dirname(input[0])
    shell:
        """
        tar -C {params.outdir} -xzf {input.expr};
        tar -C {params.outdir} -xzf {input.spatial};
        """

rule make_RDS:
    input:
        "data-raw/2020_10X-demo_lymph-node/{library}/filtered_feature_bc_matrix/matrix.mtx.gz",
        "data-raw/2020_10X-demo_lymph-node/{library}/spatial/tissue_positions_list.csv",
    output:
        rds='data/rds/2020_10X-demo_lymph-node/{library}.rds'
    params:
        outs_dir=lambda wildcards, input: os.path.dirname(os.path.dirname(input[0]))
    shell:
        """
        ./scripts/preprocess_Visium.R {params.outs_dir} {output.rds}
        """

