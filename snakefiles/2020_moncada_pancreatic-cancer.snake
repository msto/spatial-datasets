SAMPLES = [
    'GSM3036911_PDAC-A-st1',
    'GSM3405534_PDAC-B-st1',
    'GSM4100721_PDAC-A-st2',
    'GSM4100722_PDAC-A-st3',
    'GSM4100723_PDAC-B-st2',
    'GSM4100724_PDAC-B-st3',
    'GSM4100725_PDAC-D-st1',
    'GSM4100726_PDAC-E-st1',
    # 'GSM4100727_PDAC-F-st1',  # truncated expression matrix
    'GSM4100728_PDAC-G-st1']

rule all:
    input:
        expand('data/rds/2020_moncada_pancreatic-cancer/{sample}.rds', sample=SAMPLES)

rule download:
    output:
        "data-raw/2020_moncada_pancreatic-cancer/GSE111672_RAW.tar"
    shell:
        """
        curl -o {output} ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE111nnn/GSE111672/suppl/GSE111672_RAW.tar
        """

rule extract:
    input:
        "data-raw/2020_moncada_pancreatic-cancer/GSE111672_RAW.tar"
    output:
        [f"data-raw/2020_moncada_pancreatic-cancer/{sample}.tsv.gz" for sample in SAMPLES]
    params:
        outdir=lambda wildcards, input: os.path.dirname(input[0])
    shell:
        """
        tar -C {params.outdir} -xf {input};
        mv {params.outdir}/GSM3036911.tsv.gz {params.outdir}/GSM3036911_PDAC-A-st1.tsv.gz;
        mv {params.outdir}/GSM3405534_PDAC-B-ST1.tsv.gz {params.outdir}/GSM3405534_PDAC-B-st1.tsv.gz;
        """

rule clean_excel:
    input:
        "data-raw/2020_moncada_pancreatic-cancer/{sample}.tsv.gz"
    output:
        "data/cleaned/2020_moncada_pancreatic-cancer/{sample}.excel_cleaned.tsv.gz"
    shell:
        """
        zcat {input} | sed -f scripts/excel_genes.sed - | gzip -c > {output}
        """

rule dedup_genes:
    input:
        "data/cleaned/2020_moncada_pancreatic-cancer/{sample}.excel_cleaned.tsv.gz"
    output:
        "data/cleaned/2020_moncada_pancreatic-cancer/{sample}.dedup.tsv.gz"
    shell:
        """
        awk -f scripts/uniquify.awk <(zcat {input}) <(zcat {input}) | gzip -c > {output}
        """

rule make_data:
    input:
        "data/cleaned/2020_moncada_pancreatic-cancer/{sample}.dedup.tsv.gz"
    output:
        counts='data/cleaned/2020_moncada_pancreatic-cancer/{sample}.counts.csv.gz',
        rowData='data/cleaned/2020_moncada_pancreatic-cancer/{sample}.rowData.csv',
        colData='data/cleaned/2020_moncada_pancreatic-cancer/{sample}.colData.csv',
    params:
        flags = lambda wildcards: "-t" if wildcards.sample in ["GSM3036911_PDAC-A-st1", "GSM3405534_PDAC-B-st1"] else ""
    shell:
        """
        ./scripts/2020_moncada_pancreatic-cancer/make_data.py {params.flags} \
            {input} {output.counts} {output.rowData} {output.colData}
        """

rule make_RDS:
    input:
        counts='data/cleaned/2020_moncada_pancreatic-cancer/{sample}.counts.csv.gz',
        rowData='data/cleaned/2020_moncada_pancreatic-cancer/{sample}.rowData.csv',
        colData='data/cleaned/2020_moncada_pancreatic-cancer/{sample}.colData.csv'
    output:
        rds='data/rds/2020_moncada_pancreatic-cancer/{sample}.rds'
    shell:
        """
        ./scripts/make_RDS.R \
            --sample {wildcards.sample} --dataset 2020_moncada_pancreatic-cancer \
            {input.counts} {input.rowData} {input.colData} {output.rds}
        """
